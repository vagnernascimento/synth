	<style>
		.button {
	  color:#666699; 
		background-color:#E8EDFF; 
		border: 1px solid; 
		border-color: #666699 #003399 #003399 #666699;
		float: right;
		}
		.button:hover {
			color: #003399;
		}
    .acResults li{
      border-bottom: solid 1px black;
    };

	</style>

	<table class="hor-zebra">
	  <tr>
	    <th>Properties</th>
			<th><%= button_to 'Delete resource', { :controller => :resources, :action => "destroy", :id => @resource }, :method => :delete, :class => 'button', :onclick => "if(confirm('Are you sure?')){ $('#loading').show(); return true }else{return false};" %></th>
	  </tr>
		<tr><td width="25%">uri</td><td><ul class="bullets-none"><li><%= @resource.compact_uri.split(/(.{45})/).reject{|a| a == ""}.join("<br/>") %></li></ul></td></tr>
		<% @resource.direct_properties.sort{|a,b|  
		  (a.rdfs::label.empty? ? a.compact_uri : a.rdfs::label.first.to_s ) <=> (b.rdfs::label.empty? ? b.compact_uri : b.rdfs::label.first.to_s)
		}.each do |property| %>
	  <tr class="property_row">
	    <td width="25%">
				<span class="property_label"><%= link_to (property.rdfs::label.empty? ? property.compact_uri : property.rdfs::label.first), { :controller => :resources, :action => :show, :id => property.uri }, :property => property.uri %></span>
				<span class="add_value ui-icon ui-icon-plus"></span>
		  </td>
			<td>
				<ul class="bullets-none">
				
				<% for value in property.to_a.reverse do %>
					<li>
						<% if (value.is_a?(RDFS::Resource) && value.class != RDFS::LocalizedString) %>
							<%= link_to "", { :controller => :resources, :action => :show, :id => value.uri }, :class => "ui-icon ui-icon-extlink" %>
							<div class="editable">
								<div class="showing" style="color: #669;">
									
                  <%= (value.rdfs::label.empty? ? value.compact_uri : value.rdfs::label.first).force_encoding("ASCII-8BIT") %>
								</div>
								<div class="editing">
									<input type="text" name="property" id="<%= property.uri %>" value="<%= value.uri %>"/>
								</div>
							</div>							
						<% else %>
							<div class="editable">
								<div class="showing <%= ' animate' if (!@property.nil? && @property.uri == property.uri) && @value == value %>">
									<%= h value.to_s.inspect.force_encoding("ASCII-8BIT") %>
								</div>
								<div class="editing">
									<input type="text" name="property" id="<%= property.uri.force_encoding("ASCII-8BIT") %>" cols="50" value="<%= value.to_s.force_encoding("ASCII-8BIT") %>">
								</div>
							</div>
						<% end %>
					</li>
				<% end %>
				</ul>
			</td>
		</tr>
		<% end %>	
	</table>	

	<div class="add_property">
		<a>Add property</a>
	</div>

	<script>
		$(function(){

	    var original;
			var editing;
			var showing;

      
			$('.editable').click(start_edition);
			//$('.editable').focusout(save);

			$('.editable').keypress(mykeypress);

			$('.add_value').click(add_value);
			
			$('.add_property').click(add_property);
			
			function add_property(){
				var row = '\
					 <tr class="property_row">\
					    <td width="25%">\
								<span class="property_label"><input type="text"/></span>\
						  </td>\
					 </tr>';
				var new_property = $('.hor-zebra tbody').append(row)
				new_property.find(':input').focus()

				$('.property_label').find(':input').focusout(function(){ if($(this).val().trim() == ""){ 
																																		$(this).parents('tr').remove();
																																 }
																																});
				$('.property_label').find(':input').autocomplete({ 
						url: "/resources/search_property", 
						minChars: 3,
						onItemSelect: function(selected){ 
								var new_row = '\
									<td width="25%">\
									<span class="property_label">\
											<a property="' + selected['data'] + '" href="/resources/'+selected['data']+'">'+selected['value']+'</a>\
									</span>\
									<span class="add_value ui-icon ui-icon-plus"></span>\
									</td>\
									<td>\
										<ul class="bullets-none">\
											<li>\
												<div class="editable">\
													<div class="editing">\
														<input type="text" name="property" id="' + selected['data'] + '" value=""/>\
													</div>\
												</div>\
											</li>\
										</ul>\
									</td>';
								new_property.find('tr').last().html(new_row);								
								var input = new_property.find('tr').last().find('.editing').show().find(':input')
								input.focusout( function(){ input = $(this);
																						if(input.val().trim() == ""){ 
																							input.parents('tr').remove();
									 													} });
                add_autocomplete(input);
								original = "";
								input.parents('.editable').keypress(mykeypress);								
                input.focus();
						},
				});
			}

      function add_autocomplete(input){
        var class_properties = ["http://www.w3.org/1999/02/22-rdf-syntax-ns#type", 
                              "http://www.w3.org/2000/01/rdf-schema#domain",
                              "http://www.w3.org/2000/01/rdf-schema#range",
                              "http://www.w3.org/2000/01/rdf-schema#subClassOf"];

        var prop_properties =  ["http://www.w3.org/2000/01/rdf-schema#subPropertyOf",
                              "http://www.w3.org/2002/07/owl#inverseOf"];
        
        property_uri = input.attr('id');
        
        if ($.inArray(property_uri, class_properties) != -1)
          search_url = "/resources/search_class";
        else if ($.inArray(property_uri, prop_properties) != -1)
          search_url = "/resources/search_property";
        else
          search_url = "/resources/search_resource";

				input.autocomplete({ 
						url: search_url, 
						minChars: 3,
						onItemSelect: function(selected){ 
                input.val(selected['data']);
						},
				});
      }

			function add_value(){
				original = "";
        var property_uri = $(this).parent().find('.property_label a').attr('property');
				var input_value = '\
					<div class="editable">\
					<div class="showing"></div>\
					<div class="editing">\
						<input type="text" name="property" value="" id=\''+property_uri+'\'/></div></div></li>';

				var parent = $(this).parent().parent().find('.editable').last().parent().parent();

				parent.append(input_value);
				editable = parent.find('.editable').last();
				editing  = parent.find('.editing').last();
				showing  = parent.find('.showing').last();
				editable.keypress(mykeypress);
				editable.click(start_edition);
				editable.focusout(added_focusout);
				editing.show();

				editing.find(':input').focus();		
        add_autocomplete(editing.find(':input'));
        					
			}

			function added_focusout(){
				if($(this).find(":input").val().trim() == ""){
					$(this).remove();				
				}
			}

			function start_edition(){
				editing  = $(this).find('.editing');
				showing  = $(this).find('.showing');
				original = $(this).find(".editing :input").val();
				original_values = $(this).parent().parent().find(':input').map(function(){return this.value}).toArray();
				showing.hide();
				editing.show();
				editing.find(":input").focus();
        add_autocomplete(editing.find(":input")); 
			}

			function mykeypress(e){
				var code = (e.keyCode ? e.keyCode : e.which);				
				 if(code == 13) { //Enter keycode
						//editing.hide();
						//showing.show();
						var value   = $(this).find(":input").val();
						var changed = (original != value);
						var deleted  = false;
						if(changed){
			      	//var values = $(this).parent().parent().find(':input').map(function(){return this.value}).toArray();
							if(original != "" && value.trim() == ""){
								if(confirm("Are you sure you want to delete this property value?")){
 								  $('#loading').show();
									$.post("/resources/update_property",{id: '<%= @resource.uri %>', property: $(this).find(':input').attr('id') , value: value, original: original},function(txt){
											$('#loading').hide();
											$('.properties').html(txt); 										  
								 	});
								}
								else{
									editing.find(':input').val(original);
								}

							}
							else if(value.trim() != ""){
								$('#loading').show();
								$.post("/resources/update_property",{id: '<%= @resource.uri %>', property: $(this).find(':input').attr('id') , value: value, original: original},function(txt){
										$('#loading').hide();
										$('.properties').html(txt);
							 	});
							}
						}
				 }
				//TODO: remover (no esc) o campo editavel quando é adicionado pelo usuario
				 else if(code == 27){ //Escape keycode
					$(this).find(":input").val(original);
					$('.acResults').hide();
					editing.hide();
					showing.show();			
				 }				 
		 	}

			$('.animate').animate({ backgroundColor: "yellow" }, 0).animate({ backgroundColor: "white" }, 2000);

	  });
	</script>
	
	<style>
		.editing { display: none; }
		.property_label { float: left;}
		.properties { float: left;}
	  .ui-icon-extlink { float: left; clear:both; }
		.add_property { margin: 10px; float: right;}
		.add_property a:hover { text-decoration: underline; cursor: pointer; }
		.ui-menu-item { font-size: 12px; list-style-type:none; margin: 0; padding: 0; border-bottom: 1px solid;}
		.ui-autocomplete { margin: 0px; padding: 0px; width: 500px;}		
	</style>
